<div class="row justify-content-center">
  <div class="col-6">
    <div class="card">
      <form class="card-body text-center needs-validation" novalidate>
        <div class="card-title">
          <h4 class="border-bottom pb-2 mb-4">Account Login</h4>
        </div>
        <div class="card-text">
          <div class="form-group">
            <label class="font-weight-bold text-dark" for="username">Username</label>
            <input id="username" class="form-control" type="text" autocomplete="off" required /> <!-- is-invalid -->
            <div class="invalid-feedback">Please provide a username</div>
          </div>
          <div class="form-group">
            <label class="font-weight-bold text-dark" for="password">Password</label>
            <input id="password" class="form-control" type="password" autocomplete="off" required />
            <div class="invalid-feedback">Please provide a password</div>
          </div>
          <div class="form-group form-check">
            <input type="checkbox" class="form-check-input" id="remember">
            <label class="form-check-label text-dark" for="remember">Remember Me</label>
          </div>
          <button type="submit" class="btn btn-dark">Submit</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js"></script>
<script>
  (function() {
    'use strict';
    window.addEventListener('load', function() {
      var forms = document.getElementsByClassName('needs-validation');
      var validation = Array.prototype.filter.call(forms, function(form) {
        form.addEventListener('submit', function(event) {
          if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
          } else {
            event.preventDefault();
            axios.post('http://localhost:9000/user/authenticate', {
              username: document.querySelector('#username').value,
              password: document.querySelector('#password').value,
            })
            .then(res => {
              const { auth, token } = res.data;

              if (auth === true) {
                document.cookie = `userToken=${token}`;
                location.href = '/account/dashboard';
              }
            })
            .catch(err => {
              console.log(err);
            });
          }
          form.classList.add('was-validated');
        }, false);
      });
    }, false);
  })();
</script>
